name: CI
on: push
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: erlef/setup-elixir@v1
      with:
        otp-version: "24.0.5"
        elixir-version: "1.12.2"
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git build-essential
    - name: Setup elixir
      run: |
        mix deps.get
        mix compile
      env:
        MIX_ENV: test
    - name: Verify application
      run: |
        mix format --check-formatted
        mix compile --force --warnings-as-errors
        mix credo
        mix test
      env:
        MIX_ENV: test

  docs:
    runs-on: ubuntu-20.04
    needs: [tests]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-docs-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-docs-
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile.site
        push: true
        tags: oestrich/ainoweb.dev:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - uses: chrnorm/deployment-action@releases/v1
      name: Create GitHub deployment
      id: deployment
      with:
        token: "${{ github.token }}"
        target_url: https://ainoweb.dev/
        environment: documentation
    - name: Deploy via helm
      uses: deliverybot/helm@v1
      with:
        release: ainoweb
        namespace: static-sites
        chart: helm/static
        helm: helm3
        values: |
          web:
            host: ainoweb
          image:
            repository: oestrich/ainoweb.dev
            tag: '${{ github.sha }}'
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target_url: https://ainoweb.dev/
        environment_url: https://ainoweb.dev/
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target_url: https://ainoweb.dev/
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
